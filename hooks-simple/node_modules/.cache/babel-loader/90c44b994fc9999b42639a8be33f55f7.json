{"ast":null,"code":"import _regeneratorRuntime from \"/etc/opt/hooks-simple/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/etc/opt/hooks-simple/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/etc/opt/hooks-simple/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/etc/opt/hooks-simple/src/components/ResourceList.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nvar userReso = function userReso(_ref) {\n  var resource = _ref.resource;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      resources = _useState2[0],\n      setResources = _useState2[1];\n\n  var fetchResource =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(resource) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.get(\"https://jsonplaceholder.typicode.com/\".concat(resource));\n\n            case 2:\n              response = _context.sent;\n              setResources(response.data);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function fetchResource(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    fetchResource(resource);\n  }, [resource]);\n  return resources;\n};\n\nvar ResourceList = function ResourceList(_ref3) {\n  var resources = _ref3.resources;\n  return React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, resources.map(function (record) {\n    return React.createElement(\"li\", {\n      key: record.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, record.title);\n  }));\n};\n\nexport default ResourceList;","map":{"version":3,"sources":["/etc/opt/hooks-simple/src/components/ResourceList.js"],"names":["React","useState","useEffect","axios","userReso","resource","resources","setResources","fetchResource","get","response","data","ResourceList","map","record","id","title"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,QAAQ,GAAE,SAAVA,QAAU,OAAgB;AAAA,MAAdC,QAAc,QAAdA,QAAc;;AAAA,kBACKJ,QAAQ,CAAC,EAAD,CADb;AAAA;AAAA,MACrBK,SADqB;AAAA,MACXC,YADW;;AAG5B,MAAMC,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAG,iBAAOH,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACIF,KAAK,CAACM,GAAN,gDAAkDJ,QAAlD,EADJ;;AAAA;AACbK,cAAAA,QADa;AAEpBH,cAAAA,YAAY,CAACG,QAAQ,CAACC,IAAV,CAAZ;;AAFoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAbH,aAAa;AAAA;AAAA;AAAA,KAAnB;;AAKAN,EAAAA,SAAS,CAAC,YAAI;AACVM,IAAAA,aAAa,CAACH,QAAD,CAAb;AACH,GAFQ,EAEP,CAACA,QAAD,CAFO,CAAT;AAIA,SAAOC,SAAP;AACH,CAbD;;AAeA,IAAMM,YAAY,GAAG,SAAfA,YAAe,QAAiB;AAAA,MAAfN,SAAe,SAAfA,SAAe;AAClC,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,SAAS,CAACO,GAAV,CAAc,UAAAC,MAAM;AAAA,WACjB;AAAI,MAAA,GAAG,EAAEA,MAAM,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqBD,MAAM,CAACE,KAA5B,CADiB;AAAA,GAApB,CADL,CADJ;AAOH,CARD;;AAUA,eAAeJ,YAAf","sourcesContent":["import React,{useState,useEffect} from 'react'\nimport axios from 'axios'\n\nconst userReso =({resource}) => {\n    const [resources,setResources] = useState([]);\n\n    const fetchResource = async (resource) =>{\n       const response = await axios.get(`https://jsonplaceholder.typicode.com/${resource}`)\n      setResources(response.data)\n    }\n\n    useEffect(()=>{\n        fetchResource(resource)\n    },[resource])\n\n    return resources;\n}\n\nconst ResourceList = ({resources}) => {\n    return (\n        <ul>\n            {resources.map(record => (\n                <li key={record.id}>{record.title}</li>\n            ))}\n        </ul>\n    );\n}\n\nexport default ResourceList;"]},"metadata":{},"sourceType":"module"}